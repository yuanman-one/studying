<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--配置文件属性-->
    <properties resource="generator/MBG.properties"/>
    <!-- mysql驱动的位置 这个是MySQL连接的jar包，你需要指定你自己计算机上的jar包的位置-->
    <classPathEntry
            location="D:\Users\17822\.m2\repository\org\mybatis\generator\mybatis-generator-core\1.3.7\mybatis-generator-core-1.3.7.jar"/>
    <!--    <context id="context" targetRuntime="MyBatis3Simple">-->
    <!--    <context id="context" targetRuntime="MyIntrospectedTableMyBatis3Impl">-->
    <context id="context" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="dateFormat" value="yyyy/MM/dd"/>
<!--        <property name="author" value="admin"/>-->

        <!--生成mapper.xml时覆盖原文件-->
        <!--        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>-->
        <!--   给实体类实现Serializable接口     -->
        <plugin type="com.example.springbootdemo.utilMBGenerator.plugins.MySerializablePlugin"/>
        <!--            <property name="addGWTInterface" value="true"/>-->
        <!--        </plugin>-->
        <!--   给实体类添加@Data注解并去掉get、set方法     -->
        <plugin type="com.example.springbootdemo.utilMBGenerator.plugins.MyLombokPlugin"/>
        <!--   已经通过自定义的MyCommentGenerator.java去给实体类实现Serializable     -->
        <commentGenerator type="${commentGenerator}">
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
            <!-- 是否生成注释代时间戳 -->
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
            <property name="author" value="${author}"/>
            <property name="dateFormat" value="${dateFormat}"/>
        </commentGenerator>


        <!-- JDBC连接数据库 -->
        <jdbcConnection userId="${root}"
                        password="${password}"
                        driverClass="${driverClass}"
                        connectionURL="${url}">
            <!-- 设置 useInformationSchema 属性为 true ，获取表的注释信息-->
            <property name="useInformationSchema" value="true"/>
            <!--mysql8驱动后nullCatalogMeansCurrent默然为false，改成true，表示只获取当前数据库的表即getTables（）-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 数据表对应的model层  domain -->
        <!-- 生成实体类地址 这里需要你改动，其中targetPackage需要根据你自己创建的目录进行改动 -->
        <javaModelGenerator targetPackage="${modelTargetPackage}"
                            targetProject="${modelTargetProject}">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成mapper.xml文件 -->
        <sqlMapGenerator targetPackage="${sqlMapTargetPackage}"
                         targetProject="${sqlMapTargetProject}">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成mapper接口   这里需要改动targetPackage，依据你自己的工程-->
        <javaClientGenerator targetPackage="${clientTargetPackage}"
                             targetProject="${clientTargetProject}"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample是否生成 example类 -->
        <!--        <table schema="firstdatasource" domainObjectName="Student" tableName="student"-->
        <table schema="firstdatasource" tableName="%"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!-- 解决mybatis generator生成实体类和数据库字段名不一致 -->
            <property name="useActualColumnNames" value="true"/>
            <!-- 取不到数据库中字段的注释时，需配置下面的属性 -->
            <!-- 针对oracle数据库 -->
            <!--            <property name="remarksReporting" value="true"></property>-->
            <!-- 针对mysql数据库 -->
            <property name="useInformationSchema" value="true"></property>
            <!--      insert方法返回主键值      -->
            <!--            <generatedKey column="id" sqlStatement="MySql" identity="true"/>-->
        </table>
    </context>
</generatorConfiguration>
